@page
@model ConsultStatsModel
@{
    ViewData["Title"] = "Statistiques d'équipe";
    Layout = "_StatsLayout";
}

@section TeamSelector {
    @if (Model.UserTeams.Count == 0)
    {
        <div class="alert alert-warning" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            Aucune équipe disponible.
        </div>
    }
    else
    {
        <form method="post">
            <div class="text-danger mb-3">
                <validation-summary model-only="true"/>
            </div>

            <div class="teams-row">
                @foreach (var team in Model.UserTeams)
                {
                    <div class="team-item">
                        <input type="submit" asp-for="SelectedTeamId" value="@team.Id" id="team-@team.Id" class="visually-hidden"/>
                        <label for="team-@team.Id" class="team-label @(team.Id == Model.SelectedTeamId ? "team-selected" : "")">
                            <div class="team-logo-container">
                                @if (!string.IsNullOrEmpty(team.Logo))
                                {
                                    <img src="~/uploads/logos/@team.Logo" alt="Logo @team.Name" class="team-logo">
                                }
                                else
                                {
                                    <div class="team-initial">
                                        <span>@(team.Name.Substring(0, 1))</span>
                                    </div>
                                }
                            </div>
                            <div class="team-name">@team.Name</div>
                        </label>
                    </div>
                }
            </div>
        </form>
    }
}

@if (Model.SelectedTeamId != 0)
{
    <!-- Résumé statistique en haut -->
    <div class="row mb-4">
        <div class="col-md-4 mb-3 mb-md-0">
            <div class="stats-card h-100">
                <div class="card-body p-3 text-center">
                    <div class="mb-2">
                        <i class="fas fa-circle-check fa-2x text-primary"></i>
                    </div>
                    <h3 class="font-barlow  fs-2 text-white mb-1">@Model.StatVictoryData.TotalSuccess</h3>
                    <p class="text-white-50 mb-0">Missions réussies</p>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-3 mb-md-0">
            <div class="stats-card h-100">
                <div class="card-body p-3 text-center">
                    <div class="mb-2">
                        <i class="fas fa-times-circle fa-2x text-danger"></i>
                    </div>
                    <h3 class="font-barlow fw-bold fs-2 text-white mb-1">@Model.StatVictoryData.TotalFailure</h3>
                    <p class="text-white-50 mb-0">Missions échouées</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="stats-card h-100">
                <div class="card-body p-3 text-center">
                    <div class="mb-2">
                        <i class="fas fa-percentage fa-2x text-success"></i>
                    </div>
                    @{
                        var total = Model.StatVictoryData.TotalSuccess + Model.StatVictoryData.TotalFailure;
                        var tauxReussite = total > 0 ? (int)Math.Round((double)Model.StatVictoryData.TotalSuccess / total * 100) : 0;
                    }
                    <h3 class="font-barlow fw-bold fs-2 text-white mb-1">@tauxReussite%</h3>
                    <p class="text-white-50 mb-0">Taux de réussite</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Graphique des résultats de mission -->
    <div class="stats-card mb-4">
        <div class="stats-card-header">
            <h4 class="font-barlow fw-bold text-white mb-0">
                Résultats des missions
            </h4>
        </div>
        <div class="card-body p-3">
            @if (Model.StatsEvolution != null)
            {
                <div class="chart-container">
                    <canvas id="total-result-mission-chart"></canvas>
                    <i class="fas fa-download download-icon" id="downloadChart-result-mission" title="Télécharger le graphique"></i>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    Aucune donnée disponible.
                </div>
            }
        </div>
    </div>

    <!-- Évolution de la force -->
    <div class="stats-card mb-4">
        <div class="stats-card-header">
            <h4 class="font-barlow fw-bold text-white mb-0">
                Évolution de l'issue de la force au cours des missions
            </h4>
        </div>
        <div class="card-body p-3">
            @if (Model.StatsEvolution != null && Model.StatsEvolution.Count > 0)
            {
                <div class="chart-container">
                    <canvas id="strength-team-chart"></canvas>
                    <i class="fas fa-download download-icon" id="downloadChart-team-strength" title="Télécharger le graphique"></i>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    Aucune donnée disponible pour l'évolution de la force.
                </div>
            }
        </div>
    </div>

    <!-- Évolution de l'endurance -->
    <div class="stats-card">
        <div class="stats-card-header">
            <h4 class="font-barlow fw-bold text-white mb-0">
                Évolution de l'issue de la endurance au cours des missions
            </h4>
        </div>
        <div class="card-body p-3">
            @if (Model.StatsEvolution != null && Model.StatsEvolution.Count > 0)
            {
                <div class="chart-container">
                    <canvas id="endurance-team-chart"></canvas>
                    <i class="fas fa-download download-icon" id="downloadChart-team-endurance" title="Télécharger le graphique"></i>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    Aucune donnée disponible pour l'évolution de l'endurance.
                </div>
            }
        </div>
    </div>
}
else
{
    <!-- État initial - pas d'équipe sélectionnée -->
    <div class="text-center py-4">
        <div class="mb-3">
            <i class="fas fa-chart-line fa-3x text-primary opacity-50"></i>
        </div>
        <h4 class="font-barlow fw-bold text-white mb-2">Aucune équipe sélectionnée</h4>
        <p class="text-white-50">Veuillez sélectionner une équipe pour voir ses statistiques</p>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        var dataSuccess = @Html.Raw(Json.Serialize(Model.StatVictoryData));
        var dataTeamStat = @Html.Raw(Json.Serialize(Model.StatsEvolution));

        document.addEventListener("DOMContentLoaded", function () {
            if (dataTeamStat && dataTeamStat.length > 0) {
                drawCharts();
                setupDownloadButtons();
            }
        });

        function drawCharts() {
            TotalResultMissions();
            StrengthChart();
            EnduranceChart();
        }

        function TotalResultMissions() {
            var ctx = document.getElementById('total-result-mission-chart').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Réussites', 'Défaites'],
                    datasets: [{
                        label: 'Total',
                        data: [dataSuccess.totalSuccess, dataSuccess.totalFailure],
                        backgroundColor: ['#3B82F6', '#EF4444'],
                        borderWidth: 1,
                        borderRadius: 4,
                        barThickness: 50
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            backgroundColor: 'rgba(13, 18, 30, 0.9)',
                            displayColors: false
                        }
                    },
                    scales: {
                        x: {
                            ticks: {
                                color: '#ffffff'
                            },
                            grid: {
                                display: false
                            }
                        },
                        y: {
                            beginAtZero: true,
                            ticks: {
                                color: '#ffffff',
                                stepSize: 1
                            },
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            }
                        }
                    }
                }
            });
        }

        function StrengthChart() {
            var ctx = document.getElementById('strength-team-chart').getContext('2d');
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: dataTeamStat.map(entry => entry.date),
                    datasets: [{
                        label: 'Force de l\'équipe',
                        data: dataTeamStat.map(entry => entry.strength),
                        fill: true,
                        backgroundColor: 'rgba(59, 130, 246, 0.2)',
                        borderColor: '#3B82F6',
                        tension: 0.3,
                        pointBackgroundColor: '#3B82F6',
                        pointRadius: 4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            backgroundColor: 'rgba(13, 18, 30, 0.9)',
                            displayColors: false
                        }
                    },
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Date',
                                color: '#ffffff'
                            },
                            ticks: {
                                color: '#ffffff',
                                maxRotation: 45,
                                minRotation: 45
                            },
                            grid: {
                                display: false
                            }
                        },
                        y: {
                            beginAtZero: true,
                            ticks: {
                                color: '#ffffff'
                            },
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            }
                        }
                    }
                }
            });
        }

        function EnduranceChart() {
            var ctx = document.getElementById('endurance-team-chart').getContext('2d');
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: dataTeamStat.map(entry => entry.date),
                    datasets: [{
                        label: 'Endurance de l\'équipe',
                        data: dataTeamStat.map(entry => entry.endurance),
                        fill: true,
                        backgroundColor: 'rgba(139, 92, 246, 0.2)',
                        borderColor: '#8B5CF6',
                        tension: 0.3,
                        pointBackgroundColor: '#8B5CF6',
                        pointRadius: 4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            backgroundColor: 'rgba(13, 18, 30, 0.9)',
                            displayColors: false
                        }
                    },
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Date',
                                color: '#ffffff'
                            },
                            ticks: {
                                color: '#ffffff',
                                maxRotation: 45,
                                minRotation: 45
                            },
                            grid: {
                                display: false
                            }
                        },
                        y: {
                            beginAtZero: true,
                            ticks: {
                                color: '#ffffff'
                            },
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            }
                        }
                    }
                }
            });
        }

        function setupDownloadButtons() {
            const downloadResultMission = document.getElementById('downloadChart-result-mission');
            const downloadTeamStrength = document.getElementById('downloadChart-team-strength');
            const downloadTeamEndurance = document.getElementById('downloadChart-team-endurance');

            if (downloadResultMission) {
                downloadResultMission.addEventListener('click', function() {
                    download('total-result-mission-chart', 'resultats-missions.png');
                });
            }
            if (downloadTeamStrength) {
                downloadTeamStrength.addEventListener('click', function() {
                    download('strength-team-chart', 'evolution-force.png');
                });
            }
            if (downloadTeamEndurance) {
                downloadTeamEndurance.addEventListener('click', function() {
                    download('endurance-team-chart', 'evolution-endurance.png');
                });
            }
        }

        function download(idGraph, filename) {
            const imgLink = document.createElement('a');
            const canvas = document.getElementById(idGraph);
            imgLink.download = filename;
            imgLink.href = canvas.toDataURL('image/png', 1);
            imgLink.click();
        }
    </script>
}