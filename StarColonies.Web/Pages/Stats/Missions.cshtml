@page
@model MissionsModel
@{
    ViewData["Title"] = "Statistiques des missions";
    Layout = "_StatsLayout";
}

@section TeamSelector {
    @if (Model.UserTeams.Count == 0)
    {
        <div class="alert alert-warning" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            Aucune équipe disponible.
        </div>
    }
    else
    {
        <form method="post">
            <div class="text-danger mb-3">
                <validation-summary model-only="true"/>
            </div>

            <div class="teams-row">
                @foreach (var team in Model.UserTeams)
                {
                    <div class="team-item">
                        <input type="submit" asp-for="SelectedTeamId" value="@team.Id" id="team-@team.Id" class="visually-hidden"/>
                        <label for="team-@team.Id" class="team-label @(team.Id == Model.SelectedTeamId ? "team-selected" : "")">
                            <div class="team-logo-container">
                                @if (!string.IsNullOrEmpty(team.Logo))
                                {
                                    <img src="~/uploads/logos/@team.Logo" alt="Logo @team.Name" class="team-logo">
                                }
                                else
                                {
                                    <div class="team-initial">
                                        <span>@(team.Name.Substring(0, 1))</span>
                                    </div>
                                }
                            </div>
                            <div class="team-name">@team.Name</div>
                        </label>
                    </div>
                }
            </div>
        </form>
    }
}

@if (Model.SelectedTeamId != 0)
{
    <div class="stats-card mb-4">
        <div class="stats-card-header">
            <h4 class="font-barlow fw-bold text-white mb-0">
                <i class="fas fa-history me-2"></i>Historique des missions
            </h4>
        </div>
        <div class="card-body p-3">
            @if (Model.HistoriqueMission.Count == 0)
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    Aucune mission disponible pour cette équipe.
                </div>
            }
            else
            {
                <div class="accordion" id="missionsAccordion">
                    @foreach (var mission in Model.HistoriqueMission)
                    {
                        <div class="accordion-item bg-transparent border-0 mb-3">
                            <h2 class="accordion-header" id="heading-@mission.Id">
                                <button class="accordion-button collapsed bg-dark text-white"
                                        type="button"
                                        data-bs-toggle="collapse"
                                        data-bs-target="#collapse-@mission.Id"
                                        aria-expanded="false"
                                        aria-controls="collapse-@mission.Id"
                                        style="border-radius: 10px; border: 1px solid rgba(90, 73, 171, 0.3);">
                                    <div class="d-flex align-items-center justify-content-between w-100">
                                        <div>
                                            <strong class="font-barlow">@mission.Name</strong>
                                            <span class="ms-2 badge bg-primary">Nv. @mission.Level</span>
                                        </div>
                                        <div class="d-flex align-items-center">
                                            @{
                                                var missionData = Model.MissionData[mission.Id];
                                                var totalMissions = missionData.Win + missionData.Lose;
                                                var successRate = totalMissions > 0 ? (int)Math.Round((double)missionData.Win / totalMissions * 100) : 0;
                                            }
                                            <span class="badge @(successRate >= 50 ? "bg-success" : "bg-danger") me-3">
                                                @successRate% de réussite
                                            </span>
                                        </div>
                                    </div>
                                </button>
                            </h2>
                            <div id="collapse-@mission.Id" class="accordion-collapse collapse" aria-labelledby="heading-@mission.Id" data-bs-parent="#missionsAccordion">
                                <div class="accordion-body p-0 mt-3">
                                    <div class="card border-0 shadow" style="background: linear-gradient(to bottom, #1D1332, #3A2463); border: 1px solid #6751A3;">
                                        <div class="card-body p-4">
                                            <h4 class="font-barlow fw-bold text-white text-center mb-4">Analyse de la mission</h4>
                                            <div class="row">
                                                <div class="col-md-6 mb-4 mb-md-0">
                                                    <div class="text-center mb-3">
                                                        <h6 class="text-white">Taux de réussite</h6>
                                                    </div>
                                                    <div class="chart-container" style="height: 180px;">
                                                        <canvas id="single-mission-chart-@mission.Id"></canvas>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="text-center mb-3">
                                                        <h6 class="text-white">Statistiques moyennes</h6>
                                                    </div>
                                                    <div class="chart-container" style="height: 180px;">
                                                        <canvas id="single-mission-issue-chart-@mission.Id"></canvas>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="text-end mt-3">
                                                <button class="btn btn-sm btn-primary" id="downloadCharts-@mission.Id">
                                                    <i class="fas fa-download me-2"></i>Télécharger
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
}
else
{
    <div class="text-center py-4">
        <div class="mb-3">
            <i class="fas fa-bullseye fa-3x text-primary opacity-50"></i>
        </div>
        <h4 class="font-barlow fw-bold text-white mb-2">Aucune équipe sélectionnée</h4>
        <p class="text-white-50">Veuillez sélectionner une équipe pour voir ses missions</p>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        var dataForSingleMission = @Html.Raw(Json.Serialize(Model.MissionData));

        document.addEventListener("DOMContentLoaded", function () {
            // Observer pour créer les graphiques uniquement lorsque les sections sont ouvertes
            const accordionSections = document.querySelectorAll('.accordion-collapse');

            accordionSections.forEach(section => {
                section.addEventListener('shown.bs.collapse', function() {
                    const missionId = this.id.split('-')[1];
                    singleMissionChart(missionId);
                    avgIssue(missionId);
                });
            });

            setupDownloadButtons();
        });

        function singleMissionChart(missionId) {
            const missionData = dataForSingleMission[missionId];
            const ctx = document.getElementById('single-mission-chart-' + missionId);

            // Vérifier si le graphique existe déjà
            if (ctx.chart) {
                ctx.chart.destroy();
            }

            ctx.chart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['Réussites', 'Échecs'],
                    datasets: [{
                        data: [missionData.win, missionData.lose],
                        backgroundColor: ['#3B82F6', '#F87171'],
                        borderWidth: 1,
                        borderColor: '#1D1332'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    cutout: '70%',
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                color: '#ffffff',
                                font: {
                                    size: 11
                                },
                                padding: 15
                            }
                        },
                        tooltip: {
                            backgroundColor: 'rgba(13, 18, 30, 0.9)',
                            displayColors: false
                        }
                    }
                }
            });
        }

        function avgIssue(missionId) {
            const missionData = dataForSingleMission[missionId];
            const ctx = document.getElementById('single-mission-issue-chart-' + missionId);

            // Vérifier si le graphique existe déjà
            if (ctx.chart) {
                ctx.chart.destroy();
            }

            ctx.chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Force', 'Endurance'],
                    datasets: [{
                        label: 'Moyenne',
                        data: [missionData.issueStrenghtAvg, missionData.issueEndurenceAvg],
                        backgroundColor: ['#3B82F6', '#8B5CF6'],
                        borderWidth: 1,
                        borderRadius: 4,
                        maxBarThickness: 40
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    indexAxis: 'y',
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            backgroundColor: 'rgba(13, 18, 30, 0.9)',
                            displayColors: false
                        }
                    },
                    scales: {
                        x: {
                            beginAtZero: true,
                            ticks: {
                                color: '#ffffff'
                            },
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            }
                        },
                        y: {
                            ticks: {
                                color: '#ffffff'
                            },
                            grid: {
                                display: false
                            }
                        }
                    }
                }
            });
        }

        function setupDownloadButtons() {
            @foreach (var mission in Model.HistoriqueMission)
            {
                @: const downloadButton@(mission.Id) = document.getElementById('downloadCharts-@mission.Id');
                @: if (downloadButton@(mission.Id)) {
                @:     downloadButton@(mission.Id).addEventListener('click', function() { downloadAllCharts(@mission.Id); });
                @: }
            }
        }

        function downloadAllCharts(missionId) {
            const doughnutCanvas = document.getElementById('single-mission-chart-' + missionId);
            const barCanvas = document.getElementById('single-mission-issue-chart-' + missionId);

            if (doughnutCanvas) {
                downloadCanvas(doughnutCanvas, `mission-${missionId}-reussite.png`);
            }
            if (barCanvas) {
                downloadCanvas(barCanvas, `mission-${missionId}-statistiques.png`);
            }
        }

        function downloadCanvas(canvas, filename) {
            const link = document.createElement('a');
            link.download = filename;
            link.href = canvas.toDataURL('image/png', 1);
            link.click();
        }
    </script>
}

@section Styles {
    <style>
        .accordion-button {
            font-family: 'Barlow Condensed', sans-serif;
            font-size: 1.1rem;
            letter-spacing: 0.5px;
        }

        .accordion-button:not(.collapsed) {
            color: #fff;
            background-color: #3B82F6;
        }

        .accordion-button::after {
            filter: brightness(0) invert(1);
        }

        .accordion-button:focus {
            box-shadow: 0 0 0 0.25rem rgba(59, 130, 246, 0.25);
        }

        /* Assurez-vous que tous les éléments ont un fond sombre */
        .mission-card, .card, .accordion-body, .accordion-collapse {
            background-color: transparent !important;
            color: white !important;
        }

        /* Style de fond pour les éléments spécifiques */
        .card-body h6 {
            color: white !important;
        }
    </style>
}