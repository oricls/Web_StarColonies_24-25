@page
@model RegisterAvatarModel

@{
    ViewData["Title"] = "Inscription - Avatar";
    ViewData["HideNavButtons"] = true;
}

<div class="container d-flex flex-column align-items-center py-5">

    <!-- Étapes d'inscription -->
    <div class="registration-steps mb-4">
        <!-- Étape 1 (active) -->
        <div class="step-item ">
            <div class="step-glow-wrapper">
                <div class="step-circle">1</div>
            </div>
            <div class="step-label">Informations</div>
        </div>

        <!-- Ligne de connexion 1-2 -->
        <div class="step-line"></div>

        <!-- Étape 2 -->
        <div class="step-item active">
            <div class="step-circle">2</div>
            <div class="step-label">Avatar</div>
        </div>

        <!-- Ligne de connexion 2-3 -->
        <div class="step-line"></div>

        <!-- Étape 3 -->
        <div class="step-item">
            <div class="step-circle">3</div>
            <div class="step-label">Profession</div>
        </div>
    </div>

    <!-- Formulaire de sélection d'avatar -->
    <div class="hall-of-fame w-100" style="max-width: 600px;">
        <h3 class="py-3 mb-0 text-center fw-bold font-barlow login-header">INSCRIPTION</h3>

        <form method="post" class="p-4" enctype="multipart/form-data">
            <div asp-validation-summary="All" class="text-danger"></div>
            
            <div class="row mb-4">
                <div class="col-md-5 d-flex align-items-center justify-content-center">
                    <div id="avatarPreview" class="rounded overflow-hidden" style="width: 200px; height: 200px;">
                        <!-- L'aperçu de l'avatar s'affichera ici -->
                        <p class="text-center">Aperçu</p>
                    </div>
                </div>
                <div class="col-md-7">
                    <div class="avatar-grid">
                        <div class="row g-2">
                            <!-- Avatars par défaut -->
                            @for (int i = 1; i <= 5; i++)
                            {
                                <div class="col-4">
                                    <div class="avatar-option rounded overflow-hidden" data-avatar="@i" style="aspect-ratio: 1;">
                                        <img src="~/avatars/avatar_@(i).png" class="img-fluid w-100 h-100 object-fit-cover" alt="Avatar @i" />
                                    </div>
                                </div>
                            }
                            
                            <!-- Option d'importation -->
                            <div class="col-4">
                                <label for="customAvatarInput" class="mb-0 w-100">
                                    <div class="avatar-option import-avatar rounded overflow-hidden bg-accent d-flex flex-column align-items-center justify-content-center" data-avatar="import" style="aspect-ratio: 1;">
                                        <i class="fas fa-upload mb-1"></i>
                                        <span class="small">Importer</span>
                                    </div>
                                </label>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Champ de téléchargement caché -->
                    <input type="file" id="customAvatarInput" class="d-none" asp-for="RegisterAvatarInput.CustomAvatar" accept="image/*" />
                    <span asp-validation-for="RegisterAvatarInput.CustomAvatar" class="text-danger"></span>
                </div>
            </div>

            <div class="d-flex justify-content-between mt-4">
                <a href="/Register" class="btn btn-outline-secondary font-barlow fw-bold w-50 mx-3 d-flex align-items-center justify-content-center">
                    <i class="fas fa-arrow-left me-2"></i> PRÉCÉDENT
                </a>
                <button type="submit" class="btn btn-purple font-barlow fw-bold w-50 mx-3">CONTINUER</button>
            </div>
            
            <!-- Champ d'avatar par défaut caché -->
            <input type="hidden" id="selectedAvatarId" asp-for="RegisterAvatarInput.SelectedAvatarId" value="" />
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const avatarOptions = document.querySelectorAll('.avatar-option:not(.import-avatar)');
            const avatarPreview = document.getElementById('avatarPreview');
            const selectedAvatarInput = document.getElementById('selectedAvatarId');
            const customAvatarInput = document.getElementById('customAvatarInput');

            // Événement de clic pour les options d'avatar standard
            avatarOptions.forEach(option => {
                option.addEventListener('click', function() {
                    // Supprimer la classe 'selected' de toutes les options
                    document.querySelectorAll('.avatar-option').forEach(opt => opt.classList.remove('selected'));

                    // Ajouter la classe 'selected' à l'option cliquée
                    this.classList.add('selected');

                    // Stocker l'avatar sélectionné
                    const avatarId = this.getAttribute('data-avatar');
                    selectedAvatarInput.value = avatarId; //ceci met à jour l'input caché
                    
                    // Réinitialiser le champ de fichier personnalisé
                    customAvatarInput.value = '';
                    
                    // Mettre à jour l'aperçu avec l'avatar sélectionné
                    const avatarImgSrc = `/avatars/avatar_${avatarId}.png`;
                    avatarPreview.innerHTML = `<img src="${avatarImgSrc}" class="w-100 h-100 object-fit-cover" alt="Avatar ${avatarId}" />`;
                });
            });

            // Gestion de l'importation d'image
            customAvatarInput.addEventListener('change', function() {
                if (this.files && this.files[0]) {
                    // Supprimer la classe 'selected' de toutes les options
                    document.querySelectorAll('.avatar-option').forEach(opt => opt.classList.remove('selected'));
                    
                    // Ajouter la classe 'selected' à l'option d'importation
                    document.querySelector('.import-avatar').classList.add('selected');
                    
                    // Réinitialiser l'ID d'avatar sélectionné
                    selectedAvatarInput.value = '';
                    
                    // Prévisualiser l'image téléchargée
                    const reader = new FileReader();
                    
                    reader.onload = function(e) {
                        avatarPreview.innerHTML = `<img src="${e.target.result}" class="w-100 h-100 object-fit-cover" alt="Avatar personnalisé" />`;
                    }
                    
                    reader.readAsDataURL(this.files[0]);
                }
            });
        });
    </script>
}


@section Styles {
    <style>
        /* Styles pour les étapes d'inscription avec effet de halo */
        .registration-steps {
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            width: 100%;
            max-width: 500px;
        }

        .step-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            z-index: 2;
        }

        .step-glow-wrapper {
            position: relative;
            margin-bottom: 8px;
        }

        .step-item.active .step-glow-wrapper::before {
            content: "";
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 5rem;
            height: 5rem;
            background: radial-gradient(
                circle,
                rgba(59, 130, 246, 0.6) 0%,
                rgba(59, 130, 246, 0.3) 20%,
                rgba(59, 130, 246, 0.1) 40%,
                rgba(59, 130, 246, 0) 70%
            );
            z-index: -1;
            border-radius: 50%;
            filter: blur(10px);
        }

        .step-circle {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #25192f;
            color: #a0a0a0;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        .step-item.active .step-circle {
            background-color: var(--accent-color);
            color: white;
        }

        .step-item.completed .step-circle {
            border: solid 0.1rem var(--accent-color);
            color: white;
        }

        .step-label {
            font-size: 0.85rem;
            color: #a0a0a0;
            text-align: center;
        }

        .step-item.active .step-label,
        .step-item.completed .step-label {
            color: white;
        }

        .step-line {
            height: 2px;
            background-color: transparent;
            width: 100%;
            max-width: 120px;
            margin: 0 5px;
            position: relative;
            top: -20px;
            z-index: 1;
        }

        .active-line {
            background-color: var(--accent-color);
        }

        .avatar-option {
            cursor: pointer;
            transition: all 0.2s ease;
            border: 2px solid transparent;
        }

        .avatar-option:hover {
            transform: scale(1.05);
        }

        .avatar-option.selected {
            border-color: var(--accent-color);
        }

        .bg-accent {
            background-color: var(--accent-color);
        }
        
        .object-fit-cover {
            object-fit: cover;
        }
    </style>
}