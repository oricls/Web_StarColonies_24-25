@page
@using System.Text.Json
@using StarColonies.Web.ViewModels
@model StarColonies.Web.Pages.ConsultColonStats
@{
    ViewData["Title"] = "Statistiques";
}
@await Html.PartialAsync("_StatsNavbar")

<div class="container mt-4">
    <div class="mb-5">
        <h3 class="text-white fw-bold mb-4">Sélectionner une équipe :</h3>
        <p class="text-white">Sélectionnez une équipe pour voir ses statistiques</p>
        <form method="post">
            <div class="text-danger mb-3">
                <validation-summary model-only="true"/>
            </div>

            <div class="d-flex flex-wrap gap-3 mb-5">
                @if (!Model.UserTeams.Any())
                {
                    <p class="text-white">Aucune équipe disponible.</p>
                }
                else
                {
                    @foreach (var team in Model.UserTeams)
                    {
                        <div class="team-selector">
                            <input type="submit" asp-for="SelectedTeamId" value="@team.Id" id="team-@team.Id" class="visually-hidden"/>
                            <label for="team-@team.Id" class="team-card">
                                <div class="team-avatar">
                                    <img src="~/@team.Baniere" alt="@team.Name" class="img-fluid">
                                </div>
                                <div class="team-name">@team.Name</div>
                            </label>
                        </div>
                    }
                }
            </div>
        </form>
    </div>

    @if (Model.SelectedTeamId == 0)
    {
        <p class="text-white">Sélectionnez une équipe pour voir les statistiques des membres.</p>
    }
    else
    {
        <div class="row g-5 justify-content-center">
            <div class="col-lg-6 col-md-6">
                <div style="top: 2rem;" class="sticky-top card bg-dark border-0 shadow">
                    <div class="card-body d-flex flex-column">
                        <div class="mb-5 d-flex flex-column gap-4">
                            <h2 class="font-barlow fw-bold text-center">Stats</h2>
                            @if (Model.StatsEvolution != null)
                            {
                                <canvas id="member-chart" style="width: 100%; height: 300px;"></canvas>
                            }
                            else if (Model.TeamMembers.Any())
                            {
                                <p class="text-white text-center">Sélectionnez un membre pour afficher ses statistiques.</p>
                            }
                            else
                            {
                                <p class="text-white text-center">L'équipe sélectionnée n'a pas de membres.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>

            @if (Model.SelectedTeamId > 0 && Model.TeamMembers.Any())
            {
                <div class="col-lg-4 col-md-6 d-flex flex-column gap-3">
                    <div class="login-container hall-of-fame">
                        <h3 class="py-3 mb-0 text-center fw-bold font-barlow login-header">MEMBRES</h3>
                    </div>
                    @foreach (var colon in Model.TeamMembers)
                    {
                        <form method="get" asp-page="/ConsultColonStats">
                            <input type="hidden" name="SelectedColonId" value="@colon.Id"/>
                            <input type="hidden" name="SelectedTeamId" value="@Model.SelectedTeamId"/>
                            <button type="submit" style="all: unset; width: 100%;">
                                @await Html.PartialAsync("_ColonCard", ColonCardVm.FromColon(colon, isSelected: colon.Id == Model.SelectedColonId, isCurrentUser: colon.Id == Model.SelectedColonId)
                                )
                            </button>
                        </form>
                    }
                </div>
            }
            else if (Model.SelectedTeamId > 0 && !Model.TeamMembers.Any())
            {
                <div class="col-lg-4 col-md-6 d-flex flex-column gap-3">
                    <div class="login-container hall-of-fame">
                        <h3 class="py-3 mb-0 text-center fw-bold font-barlow login-header">MEMBRES</h3>
                    </div>
                    <p class="text-white">Aucun membre dans cette équipe.</p>
                </div>
            }
        </div>
    }
</div>

<script type="text/javascript">
    let colonStats = @Html.Raw(JsonSerializer.Serialize(Model.StatsEvolution));

    document.addEventListener("DOMContentLoaded", function () {
        drawChart();
    });

    function drawChart() {
        if (colonStats) {
            TotalResultMissions(colonStats);
        }
    }

    function TotalResultMissions(colonStats) {
        let ctx = document.getElementById('member-chart').getContext('2d');

        new Chart(ctx, {
            type: 'radar',
            data: {
                labels: ['Endurance', 'Strength', 'Level'],
                datasets: [{
                    label: 'Statistiques du colon',
                    data: [colonStats.Endurance, colonStats.Strength, colonStats.Level],
                    borderColor: '#3B82F6',
                    borderWidth: 2,
                }]
            },
            options: {
                plugins: {
                    legend: {
                        labels: {
                            color: 'white'
                        }
                    }
                },
                backgroundColor: 'transparent',
                scales: {
                    r: {
                        angleLines: {
                            color: 'white'
                        },
                        grid: {
                            color: 'rgba(255,255,255,0.2)'
                        },
                        pointLabels: {
                            color: 'white',
                            font: {
                                size: 14
                            }
                        }
                    }
                }
            }
        });
    }
</script>

@section Styles {
    <style>
    .font-barlow {
        font-family: 'Barlow Condensed', sans-serif;
    }

    .team-selector {
        position: relative;
    }

    .team-selector label {
        cursor: pointer;
        transition: all 0.3s ease;
        padding: 10px;
        border-radius: 10px;
    }

    .team-selector label:hover {
        transform: scale(1.05);
    }

    .team-selector input[type="radio"]:checked + label {
        border: 3px solid #5a49ab;
        box-shadow: 0 0 15px rgba(90, 73, 171, 0.8);
        transform: translateY(-5px) scale(1.05);
    }

    .team-card {
        width: 120px;
        min-height: 140px;
        background-color: #1d1935;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center;
        border-radius: 10px;
        overflow: visible;
        padding: 10px;
    }

    .team-card img {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 50%;
        margin-bottom: 8px;
        border: 2px solid transparent;
        transition: all 0.3s ease;
    }

    .team-selector input[type="radio"]:checked + label .team-card img {
        border-color: #5a49ab;
    }

    .team-name {
        white-space: normal;
        word-wrap: break-word;
        max-width: 100%;
        text-align: center;
        font-size: 0.9rem;
        line-height: 1.2;
        color: #fff;
    }

    .colon-card {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 10px;
        background-color: #282344;
        border-radius: 8px;
        transition: transform 0.3s ease;
    }

    .colon-card:hover {
        transform: translateY(-5px);
    }

    .colon-avatar {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        overflow: hidden;
        margin-bottom: 8px;
    }

    .colon-avatar img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .colon-name {
        color: #fff;
        font-size: 0.9rem;
        text-align: center;
    }

    .colon-card.selected-colon {
        border: 2px solid #00FF00;
        box-shadow: 0 0 8px rgba(0, 255, 0, 0.7);
    }
    </style>
}