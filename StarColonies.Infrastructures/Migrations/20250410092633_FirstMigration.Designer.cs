// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarColonies.Infrastructures;

#nullable disable

namespace StarColonies.Infrastructures.Migrations
{
    [DbContext(typeof(StarColoniesContext))]
    [Migration("20250410092633_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BestiaireMission", b =>
                {
                    b.Property<int>("BestiairesId")
                        .HasColumnType("int");

                    b.Property<int>("MissionsId")
                        .HasColumnType("int");

                    b.HasKey("BestiairesId", "MissionsId");

                    b.HasIndex("MissionsId");

                    b.ToTable("MissionBestiaire", (string)null);
                });

            modelBuilder.Entity("ColonResource", b =>
                {
                    b.Property<int>("ColonsId")
                        .HasColumnType("int");

                    b.Property<int>("ResourcesId")
                        .HasColumnType("int");

                    b.HasKey("ColonsId", "ResourcesId");

                    b.HasIndex("ResourcesId");

                    b.ToTable("ColonResource", (string)null);
                });

            modelBuilder.Entity("ColonTeam", b =>
                {
                    b.Property<int>("MembersId")
                        .HasColumnType("int");

                    b.Property<int>("TeamsId")
                        .HasColumnType("int");

                    b.HasKey("MembersId", "TeamsId");

                    b.HasIndex("TeamsId");

                    b.ToTable("TeamColon", (string)null);
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.ActivityLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("ActivityLog");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityLogId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityLogId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Bestiaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Endurance")
                        .HasColumnType("int");

                    b.Property<int>("IdTypeBestiaire")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTypeBestiaire");

                    b.ToTable("Bestiaire");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Bonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateHeureAchat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateHeureValidite")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IdColon")
                        .HasColumnType("int");

                    b.Property<int>("IdResource")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("QuantiteResource")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdColon");

                    b.HasIndex("IdResource");

                    b.ToTable("Bonus");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Colon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DateBirth")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Endurance")
                        .HasColumnType("int");

                    b.Property<int>("IdProfession")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("NameColon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProfession");

                    b.ToTable("Colon");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityLogId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateHeureAction")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequeteAction")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ResponseAction")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityLogId");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Mission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DifficutyLevel")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Mission");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Profession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Icone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Profession");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IdTypeResource")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdTypeResource");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.ResultatMission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdMission")
                        .HasColumnType("int");

                    b.Property<int>("IdTeam")
                        .HasColumnType("int");

                    b.Property<int>("Issue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMission");

                    b.HasIndex("IdTeam");

                    b.ToTable("ResultatMission");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Baniere")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IdColonCreator")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdColonCreator");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.TypeBestiaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TypeBestiaire");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.TypeResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TypeResource");
                });

            modelBuilder.Entity("BestiaireMission", b =>
                {
                    b.HasOne("StarColonies.Infrastructures.Entities.Bestiaire", null)
                        .WithMany()
                        .HasForeignKey("BestiairesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarColonies.Infrastructures.Entities.Mission", null)
                        .WithMany()
                        .HasForeignKey("MissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ColonResource", b =>
                {
                    b.HasOne("StarColonies.Infrastructures.Entities.Colon", null)
                        .WithMany()
                        .HasForeignKey("ColonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarColonies.Infrastructures.Entities.Resource", null)
                        .WithMany()
                        .HasForeignKey("ResourcesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ColonTeam", b =>
                {
                    b.HasOne("StarColonies.Infrastructures.Entities.Colon", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarColonies.Infrastructures.Entities.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Admin", b =>
                {
                    b.HasOne("StarColonies.Infrastructures.Entities.ActivityLog", "ActivityLog")
                        .WithMany("Admins")
                        .HasForeignKey("ActivityLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityLog");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Bestiaire", b =>
                {
                    b.HasOne("StarColonies.Infrastructures.Entities.TypeBestiaire", "TypeBestiaire")
                        .WithMany("Bestiaire")
                        .HasForeignKey("IdTypeBestiaire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeBestiaire");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Bonus", b =>
                {
                    b.HasOne("StarColonies.Infrastructures.Entities.Colon", "Colon")
                        .WithMany("Bonuses")
                        .HasForeignKey("IdColon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarColonies.Infrastructures.Entities.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("IdResource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colon");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Colon", b =>
                {
                    b.HasOne("StarColonies.Infrastructures.Entities.Profession", "Profession")
                        .WithMany()
                        .HasForeignKey("IdProfession")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Profession");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Log", b =>
                {
                    b.HasOne("StarColonies.Infrastructures.Entities.ActivityLog", "ActivityLog")
                        .WithMany("Logs")
                        .HasForeignKey("ActivityLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityLog");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Resource", b =>
                {
                    b.HasOne("StarColonies.Infrastructures.Entities.TypeResource", "TypeResource")
                        .WithMany("Resources")
                        .HasForeignKey("IdTypeResource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeResource");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.ResultatMission", b =>
                {
                    b.HasOne("StarColonies.Infrastructures.Entities.Mission", "Mission")
                        .WithMany("ResultatMissions")
                        .HasForeignKey("IdMission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarColonies.Infrastructures.Entities.Team", "Team")
                        .WithMany("ResultatMissions")
                        .HasForeignKey("IdTeam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mission");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Team", b =>
                {
                    b.HasOne("StarColonies.Infrastructures.Entities.Colon", "ColonCreator")
                        .WithMany()
                        .HasForeignKey("IdColonCreator")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ColonCreator");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.ActivityLog", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Logs");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Colon", b =>
                {
                    b.Navigation("Bonuses");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Mission", b =>
                {
                    b.Navigation("ResultatMissions");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.Team", b =>
                {
                    b.Navigation("ResultatMissions");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.TypeBestiaire", b =>
                {
                    b.Navigation("Bestiaire");
                });

            modelBuilder.Entity("StarColonies.Infrastructures.Entities.TypeResource", b =>
                {
                    b.Navigation("Resources");
                });
#pragma warning restore 612, 618
        }
    }
}
